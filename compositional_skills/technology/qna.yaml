created_by: lzrvc-ibm
version: 3
task_description: >-
  This is code that will teach the student model on how to code Bell states and
  Deutsch algorithm
seed_examples:
  - question: give me the Qiskit code for the qubit gates for the first Bell state
    answer: |-
      qc.h(q[0])
      qc.cx(q[0],q[1])
  - question: give me the Qiskit code for the qubit gates for the second Bell state
    answer: |-
      qc.h(q[0])
      qc.cx(q[0],q[1])
      qc.z(q[0])
  - question: give me the Qiskit code for the qubit gates for the third Bell state
    answer: |-
      qc.h(q[0])
      qc.cx(q[0],q[1])
      qc.x(q[1])
  - question: give me the Qiskit code for the qubit gates for the fourth Bell state
    answer: |-
      qc.h(q[0])
      qc.cx(q[0],q[1])
      qc.z(q[0])
      qc.x(q[1])
  - question: >-
      give me the Qiskit code for the qubit gates for the implementation of
      oracle function for Deutsch algorithm
    answer: |-
      def blackbox(oracleType=None):

          if oracleType == None:
              oracleType = np.random.randint(4)

          oracles = {0: 'qc.iden(q[1])', 1: 'qc.x(q[1])', 2: 'qc.cx(q[0], q[1])', 3: 'qc.cx(q[0], q[1]), qc.x(q[1])'}
          return oracles[oracleType]
